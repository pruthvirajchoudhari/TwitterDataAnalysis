# -*- coding: utf-8 -*-
"""TwitterFinal.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LRgyrZAmnf9VrocSjMBSFvzl1TcZaDxQ
"""

pip install pycountry-convert

import tweepy
import numpy as np
import pandas as pd
import time
from textblob import TextBlob
import pycountry_convert as pc
from geopy.geocoders import GoogleV3
from geopy import geocoders
from geopy.exc import GeocoderTimedOut
from geopy.geocoders import Nominatim
from geopy.geocoders import ArcGIS

CONSUMER_KEY = 'TD11PAHzNuh5URzjGmlRFws6U'
CONSUMER_SECRET = 'wUVgpoU6vDI6aBfYWkYj6Mj4br8OxGSTR4WMngyYjAxfMX5Wrb'
ACCESS_TOKEN = '1325754268083646464-ie4x3sjTrVkvePrh2SYWeyZQxT4tpP'
ACCESS_SECRET = 'EvgCKJG5voMpHwDuAwh7ZDCdeZvJj6BcQ8oEc4CpZejcQ'
API_KEY = 'AIzaSyBPKc1pYcy_XHHaNpmjdLt7Wj67KSLNLyk'

auth = tweepy.OAuthHandler(CONSUMER_KEY, CONSUMER_SECRET)
auth.set_access_token(ACCESS_TOKEN, ACCESS_SECRET)
api = tweepy.API(auth)

def geocode(city, geolocator, recursion=0):
    try:
        return geolocator.geocode(city, timeout=None)
    except GeocoderTimedOut as e:
        if recursion > 10:      # max recursions
            raise e

        time.sleep(1) # wait a bit
        # try again
        return geocode(city, recursion=recursion + 1)

def continent_code(location):
   if(location != 'None' and len(location)<25 and type(location)!='NoneType'):
    locator = Nominatim(user_agent="tweetData")
    geolocator = geocoders.GoogleV3(api_key= API_KEY)
    geolocator = ArcGIS(scheme="https")
    from geopy.extra.rate_limiter import RateLimiter
    geocode = RateLimiter(geolocator.geocode, min_delay_seconds=1)
    #location = geolocator.geocode(location)
    location = geocode(location, geolocator)
    
    if(location and (type(location))!='NoneType'):

      # print(location.raw['address_components'][6])
      # length = len(location.raw['address_components'])
      # print(length)
      # for i in range(length):
      #   if(location.raw['address_components'][i]['types'] == "['country', 'political']"):
      #     if(location.raw['address_components'][i]['short_name'] != 'NONE'):
      #       code = location.raw['address_components'][i]['short_name']
      #       break
      #     else:
      #       code = 'None'
      #   else:
      #     code = 'None'

      latitude = str(location.latitude)
      longitude = str(location.longitude)
      location = locator.reverse(latitude+","+longitude)
      try:
          address = location.raw['address']
          print(123)
          print(address)
          code = address.get('country_code')
          print(456)
          print(code)
      except KeyError as ke:
          print('Key Not Found:', ke)
          code = 'None'

      # print(location.address)
      # address = location.address
      # for country in pycountry.countries:
      #   if country.name in text:
      #       print(country.name)
      
      if(code!='None' or type(code)!='NoneType'):
        code = code.upper()
        continent_code = pc.country_alpha2_to_continent_code(code)
        return continent_code
      else:
        return 0
    else:
      return 0
   else:
    return 0

df = pd.DataFrame(columns = ['created_at','tweet_id','author_id','user_location','language','tweet_type','user_verified_status','user_followers','like_count','retweet_count','subjectivity','polarity','Asia','Africa','Ocenia','North America','South America','Europe','text'])
df2 = pd.DataFrame()
def stream(data, file_name):
  i = 0
  for tweet in tweepy.Cursor(api.search,q=data, count=100).items():
    #print(i, end='\r')
    df.loc[i,'created_at'] = tweet.created_at
    df.loc[i,'tweet_id'] = tweet.id
    df.loc[i,'author_id'] = tweet.author.id
    df.loc[i,'user_location'] = tweet.user.location
    df.loc[i,'Asia'] = 1 if continent_code(tweet.user.location) == 'AS' else 0 
    df.loc[i,'Africa'] = 1 if continent_code(tweet.user.location) == 'AF' else 0 
    df.loc[i,'Ocenia'] = 1 if continent_code(tweet.user.location) == 'OC' else 0 
    df.loc[i,'North America'] = 1 if continent_code(tweet.user.location) == 'NA' else 0 
    df.loc[i,'South America'] = 1 if continent_code(tweet.user.location) == 'SA' else 0 
    df.loc[i,'Europe'] = 1 if continent_code(tweet.user.location) == 'EU' else 0 
   
    if(tweet.lang=='en'):
      var = 1
    else:
      var = 0
    df.loc[i,'language'] = var
    
    if tweet.text.startswith("RT @") == True:
      tweet_type = 1
    else:
      tweet_type = 0
    df.loc[i,'tweet_type'] = tweet_type
    if(tweet.user.verified=='TRUE'):
      user = 1
    else:
      user = 0
    df.loc[i,'user_verified_status'] = user
    df.loc[i,'user_followers'] = tweet.user.followers_count
    df.loc[i,'like_count'] = tweet.favorite_count
    df.loc[i,'retweet_count'] = tweet.retweet_count
    analysis = TextBlob(tweet.text)
    subjectivity = round(analysis.sentiment.subjectivity, 3)
    df.loc[i,'subjectivity'] = subjectivity
    polarity = round(analysis.sentiment.polarity, 3)
    df.loc[i,'polarity'] = polarity
    # if(tweet.lang=='en'):
    #   var2 = 'english'
    # else:
    #   var2 = 'universal'
    # bot = botornot(tweet.author.id, var2)
    # df.loc[i,'bot'] = bot
    df.loc[i,'text'] = tweet.text

    df.to_csv('{}.csv'.format(file_name))
    i=i+1
    if i == 200:
      break
    else:
      pass

for x in range(1):
  stream(data = ["lockheed"], file_name = 'my_tweets')
  print(2)
  df2 = df2.append(df)
  time.sleep(300)

df

from google.colab import drive
drive.mount('drive')

df2.to_csv('data.csv')
!cp data.csv "drive/My Drive/"